// frontend/src/services/notificationService.js
import { App } from 'antd';

class NotificationService {
  constructor() {
    this.messageApi = null;
    this.notificationApi = null;
    this.modalApi = null;
  }

  // Initialize APIs (called from App component)
  init(messageApi, notificationApi, modalApi) {
    this.messageApi = messageApi;
    this.notificationApi = notificationApi;
    this.modalApi = modalApi;
  }

  // ===== MESSAGE METHODS =====
  success(content, duration = 3) {
    if (this.messageApi) {
      return this.messageApi.success(content, duration);
    }
    // Fallback for development
    console.log('‚úÖ Success:', content);
  }

  error(content, duration = 4) {
    if (this.messageApi) {
      return this.messageApi.error(content, duration);
    }
    console.error('‚ùå Error:', content);
  }

  warning(content, duration = 3) {
    if (this.messageApi) {
      return this.messageApi.warning(content, duration);
    }
    console.warn('‚ö†Ô∏è Warning:', content);
  }

  info(content, duration = 3) {
    if (this.messageApi) {
      return this.messageApi.info(content, duration);
    }
    console.info('‚ÑπÔ∏è Info:', content);
  }

  loading(content, duration = 0) {
    if (this.messageApi) {
      return this.messageApi.loading(content, duration);
    }
    console.log('‚è≥ Loading:', content);
  }

  // ===== NOTIFICATION METHODS =====
  notify(config) {
    if (this.notificationApi) {
      return this.notificationApi.open(config);
    }
    console.log('üîî Notification:', config);
  }

  notifySuccess(config) {
    if (this.notificationApi) {
      return this.notificationApi.success(config);
    }
    console.log('‚úÖ Success Notification:', config);
  }

  notifyError(config) {
    if (this.notificationApi) {
      return this.notificationApi.error(config);
    }
    console.error('‚ùå Error Notification:', config);
  }

  // ===== MODAL METHODS =====
  confirm(config) {
    if (this.modalApi) {
      return this.modalApi.confirm(config);
    }
    return Promise.resolve(true); // Fallback
  }

  // ===== ADVANCED METHODS =====
  
  // Authentication notifications
  loginSuccess(userName) {
    this.success(`Ch√†o m·ª´ng ${userName}! ƒêƒÉng nh·∫≠p th√†nh c√¥ng.`);
  }

  loginError(message) {
    this.error(message || 'ƒêƒÉng nh·∫≠p th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.');
  }

  logoutSuccess() {
    this.success('ƒêƒÉng xu·∫•t th√†nh c√¥ng. H·∫πn g·∫∑p l·∫°i!');
  }

  // Link operations
  linkCreated(shortUrl) {
    this.notifySuccess({
      message: 'Link ƒë√£ ƒë∆∞·ª£c t·∫°o!',
      description: `Link r√∫t g·ªçn: ${shortUrl}`,
      duration: 4
    });
  }

  linkDeleted() {
    this.success('Link ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng.');
  }

  linkUpdated() {
    this.success('Link ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t.');
  }

  // Security notifications
  securityAlert(message) {
    this.notifyError({
      message: 'C·∫£nh b√°o b·∫£o m·∫≠t',
      description: message,
      duration: 6
    });
  }

  sessionExpired() {
    this.warning('Phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.');
  }

  // Network errors
  networkError() {
    this.error('L·ªói k·∫øt n·ªëi m·∫°ng. Vui l√≤ng ki·ªÉm tra internet.');
  }

  serverError() {
    this.error('L·ªói server. Vui l√≤ng th·ª≠ l·∫°i sau.');
  }

  // Confirmation dialogs
  confirmDelete(itemName = 'm·ª•c n√†y') {
    return this.confirm({
      title: 'X√°c nh·∫≠n x√≥a',
      content: `B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a ${itemName}?`,
      okText: 'X√≥a',
      cancelText: 'H·ªßy',
      okType: 'danger'
    });
  }

  confirmLogout() {
    return this.confirm({
      title: 'X√°c nh·∫≠n ƒëƒÉng xu·∫•t',
      content: 'B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t?',
      okText: 'ƒêƒÉng xu·∫•t',
      cancelText: 'H·ªßy'
    });
  }
}

// Export singleton instance
export default new NotificationService();